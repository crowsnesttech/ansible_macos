---

- hosts: localhost
  gather_facts: no
  # become: false
  vars_files:
    - default_vars.yml

  # pre_tasks:
  #   - name: Send a magic Wake-on-LAN packet to HackPro
  #     wakeonlan:
  #       mac: 'b4:2e:99:fc:96:2e'
  #       broadcast: 192.168.11.255
  #     delegate_to: localhost

  #   - name: Send a magic Wake-on-LAN packet to RackPro
  #     wakeonlan:
  #       mac: '10:c3:7b:4f:74:a6'
  #       broadcast: 192.168.11.255
  #     delegate_to: localhost   

  #   - name: Send a magic Wake-on-LAN packet to MBP14
  #     wakeonlan:
  #       mac: 'f0:2f:4b:0b:66:ef'
  #       broadcast: 192.168.11.255
  #     delegate_to: localhost

    - name: Wait for system to become reachable
      wait_for_connection:
        delay: 10
        timeout: 30

    - name: Gather facts for first time
      setup:

  tasks:
    - name: Updating Homebrew
      homebrew:
        update_homebrew: yes
        upgrade_all: yes
      when: ansible_machine == "x86_64"
    
    - name: Installing Homebrew Cask Packages
      community.general.homebrew_cask:
        name: "{{ brew_cask_packages }}"
        state: present
        accept_external_apps: True
      when: ansible_machine == "x86_64"
      # register: result
      # until: result is successful

    - name: Installing Homebrew Packages
      homebrew:
        name: "{{ brew_packages }}"
        state: present
      when: ansible_machine == "x86_64"
      # register: result
      # until: result is successful

    - name: Updating Homebrew M1 Pro
      homebrew:
        update_homebrew: yes
        upgrade_all: yes
      environment:
        PATH: /opt/homebrew/bin:{{ ansible_env.PATH }}
      when: ansible_machine == "arm64"
    
    - name: Installing Homebrew Cask Packages M1 Pro
      community.general.homebrew_cask:
        name: "{{ brew_cask_packages }}"
        state: present
        accept_external_apps: True
      environment:
        PATH: /opt/homebrew/bin:{{ ansible_env.PATH }}
      when: ansible_machine == "arm64"
        # register: result
      # until: result is successful

    - name: Installing Homebrew Packages M1 Pro
      homebrew:
        name: "{{ brew_packages }}"
        state: present
      environment:
        PATH: /opt/homebrew/bin:{{ ansible_env.PATH }}
      when: ansible_machine == "arm64"
        # register: result
      # until: result is successful

    - name: zshrc
      copy:
        src: files/zshrc
        dest: /Users/nick/.zshrc
        owner: nick
        group: nick
        mode: "0775"
  
    - name: vimrc  
      copy:
        src: files/vimrc
        dest: /Users/nick/.vimrc
        owner: nick
        group: nick
        mode: "0775"

    - name: Clone ohmyzsh
      git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: /Users/nick/.oh-my-zsh
        clone: yes
        update: yes

    - name: clone zsh-autosuggestions  
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: /Users/nick/.oh-my-zsh/custom/plugins/zsh-autosuggestions
        clone: yes
        update: yes
    
    - name: clone zsh-syntax-highlighting
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: /Users/nick/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        clone: yes
        update: yes
